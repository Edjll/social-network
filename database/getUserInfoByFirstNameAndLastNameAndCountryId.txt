// jpql
select new ru.edjll.backend.dto.userInfo.UserInfoDto(
    user.id, user.firstName, user.lastName, user.username, 
    case when userInfo is null then null else userInfo.birthday end, 
    case when city is null then null else city.title end) 
from User user left join user.userInfo userInfo left join userInfo.city city left join city.country country 
where lower(user.firstName) like concat('%', lower(:firstName), '%') 
and lower(user.lastName) like concat('%', lower(:lastName), '%') 
and country.id = :countryId

// sql
explain analyze
select user0_.id         as col_0_0_,
       user0_.first_name as col_1_0_,
       user0_.last_name  as col_2_0_,
       user0_.username   as col_3_0_,
       case
           when userinfo1_.user_id is null then null
           else userinfo1_.birthday
           end           as col_4_0_,
       case
           when city2_.id is null then null
           else city2_.title
           end           as col_5_0_
from user_entity user0_
         left outer join user_info userinfo1_ on user0_.id = userinfo1_.user_id
         left outer join city city2_ on userinfo1_.city_id = city2_.id
         left outer join country country3_ on city2_.country_id = country3_.id
where (lower(user0_.first_name) like ('%' || lower(?) || '%'))
  and (lower(user0_.last_name) like ('%' || lower(?) || '%'))
  and country3_.id =(?)

// result
Nested Loop  (cost=18.68..287.77 rows=1 width=1674) (actual time=0.097..0.275 rows=1 loops=1)
  ->  Nested Loop  (cost=18.68..282.73 rows=1 width=2175) (actual time=0.086..0.236 rows=1 loops=1)
        ->  Hash Join  (cost=18.55..282.15 rows=1 width=537) (actual time=0.070..0.219 rows=1 loops=1)
              Hash Cond: (city2_.id = userinfo1_.city_id)
              ->  Bitmap Heap Scan on city city2_  (cost=5.40..268.46 rows=143 width=17) (actual time=0.043..0.169 rows=138 loops=1)
                    Recheck Cond: (country_id = 2)
                    Heap Blocks: exact=52
                    ->  Bitmap Index Scan on city_country_id_index  (cost=0.00..5.36 rows=143 width=0) (actual time=0.028..0.028 rows=138 loops=1)
                          Index Cond: (country_id = 2)
              ->  Hash  (cost=11.40..11.40 rows=140 width=528) (actual time=0.010..0.016 rows=1 loops=1)
                    Buckets: 1024  Batches: 1  Memory Usage: 9kB
                    ->  Seq Scan on user_info userinfo1_  (cost=0.00..11.40 rows=140 width=528) (actual time=0.005..0.006 rows=1 loops=1)
        ->  Index Scan using constraint_fb on user_entity user0_  (cost=0.14..0.51 rows=1 width=1638) (actual time=0.013..0.013 rows=1 loops=1)
              Index Cond: ((id)::text = (userinfo1_.user_id)::text)
              Filter: ((lower((first_name)::text) ~~ '%s%'::text) AND (lower((last_name)::text) ~~ '%f%'::text))
  ->  Seq Scan on country country3_  (cost=0.00..5.04 rows=1 width=4) (actual time=0.009..0.035 rows=1 loops=1)
        Filter: (id = 2)
        Rows Removed by Filter: 242
Planning Time: 0.417 ms
Execution Time: 0.340 ms
