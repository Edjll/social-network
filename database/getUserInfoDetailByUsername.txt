// jpql
select new ru.edjll.backend.dto.userInfo.UserInfoDetailDto(
    user.id, user.firstName, user.lastName, user.username,
    case when userInfo is null then null else userInfo.birthday end,
    case when city is null then null else city.id end,
    case when city is null then null else city.title end,
    case when country is null then null else country.id end,
    case when country is null then null else country.title end)
from User user left join user.userInfo userInfo left join userInfo.city city left join city.country country
where user.username = :username

// sql
explain analyze
select user0_.id         as col_0_0_,
       user0_.first_name as col_1_0_,
       user0_.last_name  as col_2_0_,
       user0_.username   as col_3_0_,
       case
           when userinfo1_.user_id is null then null
           else userinfo1_.birthday
           end           as col_4_0_,
       case
           when city2_.id is null then null
           else city2_.id
           end           as col_5_0_,
       case
           when city2_.id is null then null
           else city2_.title
           end           as col_6_0_,
       case
           when country3_.id is null then null
           else country3_.id
           end           as col_7_0_,
       case
           when country3_.id is null then null
           else country3_.title
           end           as col_8_0_
from user_entity user0_
         left outer join user_info userinfo1_ on user0_.id = userinfo1_.user_id
         left outer join city city2_ on userinfo1_.city_id = city2_.id
         left outer join country country3_ on city2_.country_id = country3_.id
where user0_.username=(?)

// result
Nested Loop Left Join  (cost=0.43..19.62 rows=1 width=1714) (actual time=0.017..0.018 rows=0 loops=1)
  ->  Nested Loop Left Join  (cost=0.29..19.46 rows=1 width=2175) (actual time=0.016..0.017 rows=0 loops=1)
        ->  Nested Loop Left Join  (cost=0.00..11.15 rows=1 width=2166) (actual time=0.016..0.017 rows=0 loops=1)
              Join Filter: ((user0_.id)::text = (userinfo1_.user_id)::text)
              ->  Seq Scan on user_entity user0_  (cost=0.00..10.12 rows=1 width=1638) (actual time=0.016..0.016 rows=0 loops=1)
                    Filter: ((username)::text = 'ac6e6a9b-1533-49f3-ad93-2e4282b6de6f'::text)
                    Rows Removed by Filter: 4
              ->  Seq Scan on user_info userinfo1_  (cost=0.00..1.01 rows=1 width=528) (never executed)
        ->  Index Scan using city_pkey on city city2_  (cost=0.29..8.31 rows=1 width=17) (never executed)
              Index Cond: (id = userinfo1_.city_id)
  ->  Index Scan using country_pkey on country country3_  (cost=0.14..0.16 rows=1 width=14) (never executed)
        Index Cond: (id = city2_.country_id)
Planning Time: 2.936 ms
Execution Time: 0.064 ms